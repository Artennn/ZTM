// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  // NOTE: When using postgresql, mysql or sqlserver, uncomment the @db.Text annotations in model Account below
  // Further reading:
  // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
  // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(cuid())
  username String @unique
  password String
}

model Line {
  id     Int     @id @default(autoincrement())
  name   String  @db.VarChar(5) @unique
  routes Route[]
}

model Route {
  id      Int          @id @default(autoincrement())
  name    String       @db.VarChar(25)
  entries RouteEntry[]
  schedule Schedule[]
  lineID  Int
  Line    Line         @relation(fields: [lineID], references: [id], onDelete: Cascade)
}

model RouteEntry {
  busStopID     Int
  routeID       Int
  estimatedTime Int
  route         Route   @relation(fields: [routeID], references: [id], onDelete: Cascade)
  busStop       BusStop @relation(fields: [busStopID], references: [id])

  @@id([busStopID, routeID])
}

model Schedule {
  id Int @id @default(autoincrement())
  day Int
  time Int
  routeID Int
  route Route @relation(fields: [routeID], references: [id], onDelete: Cascade)
}

model BusStop {
  id           Int          @id @default(autoincrement())
  name         String       @db.VarChar(30) @unique
  gpsX         Float
  gpsY         Float
  routeEntries RouteEntry[]
}

model Driver {
  id Int @id @default(autoincrement())
  name String @db.VarChar(30)

  vehicles Vehicle[]
}

enum VehicleStatus {
  parked
  enroute
  service
  emergency
}

model Vehicle {
  id Int @id @default(autoincrement())
  name String @db.VarChar(6) @unique
  plate String @db.VarChar(10) @unique

  posX Float
  posY Float
  status VehicleStatus

  driverID Int
  driver Driver? @relation(fields: [driverID], references: [id])
}

model Info {
  id Int @id @default(autoincrement())
  title String
  content String
}